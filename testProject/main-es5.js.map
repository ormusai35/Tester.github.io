{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list-posts/list-posts.component.ts","webpack:///src/app/list-posts/list-posts.component.html","webpack:///src/app/post-create/post-create.component.ts","webpack:///src/app/post-create/post-create.component.html","webpack:///src/app/server-posts.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","ListPostsComponent","serverPostsService","posts","getPosts1","getPostUpdatedListener","subscribe","postSub","unsubscribe","PostCreateComponent","content","post","addPost1","addPost","onAddPost","ServerPostsService","http","postUpdated","push","next","get","postDate","asObservable","res","console","log","message","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testProject';\n}\n","<app-post-create></app-post-create>\r\n<app-list-posts></app-list-posts>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './post-create/post-create.component';\nimport { ListPostsComponent } from './list-posts/list-posts.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    ListPostsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Post } from '../Post.model';\nimport { ServerPostsService } from '../server-posts.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-list-posts',\n  templateUrl: './list-posts.component.html',\n  styleUrls: ['./list-posts.component.css']\n})\nexport class ListPostsComponent implements OnInit,OnDestroy {\n\n  posts:Post[] = [];\n  postSub: Subscription;\n\n  constructor(public serverPostsService: ServerPostsService) {}\n\n  ngOnInit(): void {\n    this.posts = this.serverPostsService.getPosts1();\n    this.serverPostsService.getPostUpdatedListener().subscribe(\n      (posts:Post[]) => {\n        this.posts = posts;\n      }\n    );\n  }\n\n  ngOnDestroy(){\n    this.postSub.unsubscribe();\n  }\n\n}\n","<ul *ngIf=\"posts.length > 0\">\n    <li *ngFor=\"let post of posts\">{{ 'title: '+ post.title + ', content: '+post.content }}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../Post.model';\nimport { ServerPostsService } from '../server-posts.service';\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit {\n\n  title:string= '';\n  content:string = '';\n\n  constructor(public serverPostsService: ServerPostsService) { }\n\n  ngOnInit(): void {\n  }\n\n  onAddPost(title,content){\n    let post:Post = {\n      id:null,\n      title: title,\n      content: content\n    }\n    this.serverPostsService.addPost1(post);\n    this.serverPostsService.addPost(post);\n  }\n}\n","\n<input [(ngModel)]=\"title\">\n<textarea [(ngModel)]=\"content\" rows=\"6\"></textarea><hr>\n<button class=\"btn btn-primary\" (click)=\"onAddPost(title,content)\">Save Post</button>","import { Injectable } from '@angular/core';\nimport { Post } from './Post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerPostsService {\n\n  private posts:Post[] = [\n    {\n        id: \"sdad24r3354f\",\n        title: \"First Post\",\n        content: \"1'st Post from the server\"\n    },\n    {\n        id: \"4khjk43h4jkh3\",\n        title: \"Second Post\",\n        content: \"2'stPost from the server\"\n    }\n  ];\n  private postUpdated = new Subject<Post[]>();\n\n  constructor(private http:HttpClient) { }\n\n  getPosts1(){\n    return [...this.posts];\n  }\n\n  addPost1(post){\n    this.posts.push(post);\n    this.postUpdated.next([...this.posts]);\n  }\n\n  getPosts(){\n    this.http.get<{posts:Post[]}>('http://localhost:3000/api/posts').subscribe(\n      (postDate) => {\n        this.posts = postDate.posts;\n        this.postUpdated.next({...this.posts}); \n      }\n    );\n  }\n\n  getPostUpdatedListener(){\n    return this.postUpdated.asObservable();\n  }\n\n  addPost(post:Post){\n    this.posts.push(post);\n     this.http.post<{message}>('http://localhost:3000/api/posts',post).subscribe(\n      (res) => {\n        console.log(res.message);\n        // this.postUpdated.next({...this.posts});\n      }\n      \n     );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}